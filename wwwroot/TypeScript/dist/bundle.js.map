{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/greet.ts","src/site.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","sayHello","name","greet_1","console","log"],"mappings":"CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,GAAA,CAAAS,QAAA,IAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,CAAA,CAAAa,EAAA,CAAA,SAAAT,EAAAU,EAAAJ,iECAAA,EAAAK,SAAA,SAAyBC,GACrB,MAAA,cAAqBA,yFCWzB,IAAAC,EAAAb,EAAA,WAEAc,QAAQC,IAAIF,EAAAF,SAAS","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","export function sayHello(name: string) {\n    return `Hello from ${name}`;\n}","//TEST 1\n//to Test the app just run command: node src/site.js\n//Test Hello World App\n// function hello(compiler: string) {\n//     console.log(`Hello from ${compiler}`);\n// }\n// hello('TypeScript');\n//Status: Working\n\n//TEST 2\n//to Test the app just run command: node src/site.js\n//Module Test Hello World App\nimport { sayHello } from './greet';\n\nconsole.log(sayHello('vvg online'));\n//Status: Working\n\n// /**\n//  * Predefined delays (in milliseconds/ms).\n//  */\n// export enum Delays {\n//     Short = 500,\n//     Medium = 2000,\n//     Long = 5000,\n// }\n\n// /**\n//  * Returns a Promise<string> that resolves after given time.\n//  *\n//  * @param {string} name - A name.\n//  * @param {number=} [delay=Delays.Medium] - Number of milliseconds to delay resolution of the Promise.\n//  * @returns {Promise<string>}\n//  */\n// function delayedHello(\n//     name: string,\n//     delay: number = Delays.Medium,\n// ): Promise<string> {\n//     return new Promise((resolve: (value?: string) => void) =>\n//         setTimeout(() => resolve(`Hello, ${name}`), delay),\n//     );\n// }\n\n// // Below are examples of using ESLint errors suppression\n// // Here it is suppressing missing return type definitions for greeter function\n\n// // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n// export async function greeter(name: string) {\n//     return await delayedHello(name, Delays.Long);\n// }\n"]}